{"ast":null,"code":"var _jsxFileName = \"D:\\\\NHAN\\\\REACTJS\\\\asm-react2\\\\src\\\\components\\\\MovieList\\\\index.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport classes from './MovieList.module.css'; // Import CSS module\nimport MovieDetail from './MovieDetail'; // Import MovieDetail component\n\nfunction MovieList({\n  title,\n  fetchUrl,\n  isLargeRow = false\n}) {\n  const [movies, setMovies] = useState([]);\n  const [selectedMovie, setSelectedMovie] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const request = await axios.get(fetchUrl);\n        setMovies(request.data.results);\n      } catch (error) {\n        console.error(\"Lỗi khi lấy dữ liệu từ API\", error);\n      }\n    };\n    fetchData();\n  }, [fetchUrl]);\n  const handleMovieClick = movie => {\n    if (selectedMovie && selectedMovie.id === movie.id) {\n      setSelectedMovie(null); // Ẩn thông tin nếu người dùng click lại vào bộ phim đang xem\n    } else {\n      setSelectedMovie(movie); // Hiển thị thông tin của bộ phim khác\n    }\n  };\n  const base_url = \"https://image.tmdb.org/t/p/original/\";\n  return /*#__PURE__*/React.createElement(\"section\", {\n    className: classes['movie-section'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.movieList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: classes['sec-title'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, title), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.movieList__posters,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"figure\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }\n  }, movies.map(movie => /*#__PURE__*/React.createElement(\"img\", {\n    key: movie.id,\n    className: `${classes.movieList__poster} ${isLargeRow && classes.movieList__posterLarge}`,\n    src: `${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`,\n    alt: movie.name,\n    onClick: () => handleMovieClick(movie),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 29\n    }\n  }))))), selectedMovie && /*#__PURE__*/React.createElement(MovieDetail, {\n    movieData: selectedMovie,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 31\n    }\n  }));\n}\nexport default MovieList;","map":{"version":3,"names":["React","useState","useEffect","axios","classes","MovieDetail","MovieList","title","fetchUrl","isLargeRow","movies","setMovies","selectedMovie","setSelectedMovie","fetchData","request","get","data","results","error","console","handleMovieClick","movie","id","base_url","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","movieList","movieList__posters","map","key","movieList__poster","movieList__posterLarge","src","poster_path","backdrop_path","alt","name","onClick","movieData"],"sources":["D:/NHAN/REACTJS/asm-react2/src/components/MovieList/index.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport classes from './MovieList.module.css'; // Import CSS module\r\nimport MovieDetail from './MovieDetail'; // Import MovieDetail component\r\n\r\nfunction MovieList({ title, fetchUrl, isLargeRow = false }) {\r\n    const [movies, setMovies] = useState([]);\r\n    const [selectedMovie, setSelectedMovie] = useState(null);\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const request = await axios.get(fetchUrl);\r\n                setMovies(request.data.results);\r\n            } catch (error) {\r\n                console.error(\"Lỗi khi lấy dữ liệu từ API\", error);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n    }, [fetchUrl]);\r\n    const handleMovieClick = (movie) => {\r\n        if (selectedMovie && selectedMovie.id === movie.id) {\r\n            setSelectedMovie(null); // Ẩn thông tin nếu người dùng click lại vào bộ phim đang xem\r\n        } else {\r\n            setSelectedMovie(movie); // Hiển thị thông tin của bộ phim khác\r\n        }\r\n    };\r\n    const base_url = \"https://image.tmdb.org/t/p/original/\";\r\n    return (\r\n        <section className={classes['movie-section']}>\r\n            <div className={classes.movieList}>\r\n                <h2 className={classes['sec-title']}>{title}</h2>\r\n                <div className={classes.movieList__posters}>\r\n                    <figure>\r\n                        {movies.map((movie) => (\r\n                            <img key={movie.id}  className={`${classes.movieList__poster} ${isLargeRow && classes.movieList__posterLarge}`} src={`${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`} alt={movie.name} onClick={() => handleMovieClick(movie)} />\r\n                        ))}\r\n                    </figure>\r\n                </div>\r\n            </div>\r\n            {selectedMovie && <MovieDetail movieData={selectedMovie} />}\r\n        </section>\r\n    );\r\n}\r\nexport default MovieList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}
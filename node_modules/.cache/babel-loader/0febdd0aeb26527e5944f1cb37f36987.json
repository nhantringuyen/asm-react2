{"ast":null,"code":"var _jsxFileName = \"D:\\\\NHAN\\\\REACTJS\\\\asm-react2\\\\src\\\\pages\\\\search\\\\Search.jsx\";\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport SearchForm from '../../components/SearchForm';\nimport ResultList from '../../components/ResultList';\nimport MovieDetail from '../../components/MovieList/MovieDetail'; // Assume you have this component already\n\nfunction SearchPage() {\n  const [movies, setMovies] = useState([]);\n  const [selectedMovie, setSelectedMovie] = useState(null);\n  const [loading, setLoading] = useState(false); // New loading state\n\n  const searchMovies = async query => {\n    const api_key = '391c32141f9d013bc872bec944088b32';\n    setLoading(true); // Start loading\n    try {\n      const response = await axios.get('https://api.themoviedb.org/3/search/movie', {\n        params: {\n          api_key,\n          query,\n          language: 'en'\n        }\n      });\n      setMovies(response.data.results);\n    } catch (error) {\n      console.error('Error fetching movies:', error);\n    } finally {\n      setLoading(false); // Stop loading\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(SearchForm, {\n    onSearch: searchMovies,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 4\n    }\n  }), loading ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, \"Loading...\") // Loading indicator\n  : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ResultList, {\n    movies: movies,\n    onSelectMovie: setSelectedMovie,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }), selectedMovie && /*#__PURE__*/React.createElement(MovieDetail, {\n    movieData: selectedMovie,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 26\n    }\n  })));\n}\nexport default SearchPage;","map":{"version":3,"names":["React","useState","axios","SearchForm","ResultList","MovieDetail","SearchPage","movies","setMovies","selectedMovie","setSelectedMovie","loading","setLoading","searchMovies","query","api_key","response","get","params","language","data","results","error","console","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","Fragment","onSelectMovie","movieData"],"sources":["D:/NHAN/REACTJS/asm-react2/src/pages/search/Search.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport SearchForm from '../../components/SearchForm';\r\nimport ResultList from '../../components/ResultList';\r\nimport MovieDetail from '../../components/MovieList/MovieDetail'; // Assume you have this component already\r\n\r\nfunction SearchPage() {\r\n\tconst [movies, setMovies] = useState([]);\r\n\tconst [selectedMovie, setSelectedMovie] = useState(null);\r\n\tconst [loading, setLoading] = useState(false); // New loading state\r\n\r\n\tconst searchMovies = async (query) => {\r\n\t\tconst api_key = '391c32141f9d013bc872bec944088b32';\r\n\t\tsetLoading(true); // Start loading\r\n\t\ttry {\r\n\t\t\tconst response = await axios.get('https://api.themoviedb.org/3/search/movie', {\r\n\t\t\t\tparams: { api_key, query, language: 'en' },\r\n\t\t\t});\r\n\t\t\tsetMovies(response.data.results);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error('Error fetching movies:', error);\r\n\t\t} finally {\r\n\t\t\tsetLoading(false); // Stop loading\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<SearchForm onSearch={searchMovies} />\r\n\t\t\t{loading ? (\r\n\t\t\t\t<p>Loading...</p> // Loading indicator\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t<ResultList movies={movies} onSelectMovie={setSelectedMovie} />\r\n\t\t\t    {selectedMovie && <MovieDetail movieData={selectedMovie} />}\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default SearchPage;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,6BAA6B;AACpD,OAAOC,UAAU,MAAM,6BAA6B;AACpD,OAAOC,WAAW,MAAM,wCAAwC,CAAC,CAAC;;AAElE,SAASC,UAAUA,CAAA,EAAG;EACrB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACQ,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAE/C,MAAMY,YAAY,GAAG,MAAOC,KAAK,IAAK;IACrC,MAAMC,OAAO,GAAG,kCAAkC;IAClDH,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;IAClB,IAAI;MACH,MAAMI,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAC,2CAA2C,EAAE;QAC7EC,MAAM,EAAE;UAAEH,OAAO;UAAED,KAAK;UAAEK,QAAQ,EAAE;QAAK;MAC1C,CAAC,CAAC;MACFX,SAAS,CAACQ,QAAQ,CAACI,IAAI,CAACC,OAAO,CAAC;IACjC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACfC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC/C,CAAC,SAAS;MACTV,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;IACpB;EACD,CAAC;EAED,oBACCZ,KAAA,CAAAwB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACC9B,KAAA,CAAAwB,aAAA,CAACrB,UAAU;IAAC4B,QAAQ,EAAElB,YAAa;IAAAY,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,EACrCnB,OAAO,gBACPX,KAAA,CAAAwB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,YAAa,CAAC,CAAC;EAAA,eAElB9B,KAAA,CAAAwB,aAAA,CAAAxB,KAAA,CAAAgC,QAAA,qBACAhC,KAAA,CAAAwB,aAAA,CAACpB,UAAU;IAACG,MAAM,EAAEA,MAAO;IAAC0B,aAAa,EAAEvB,gBAAiB;IAAAe,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,EAC3DrB,aAAa,iBAAIT,KAAA,CAAAwB,aAAA,CAACnB,WAAW;IAAC6B,SAAS,EAAEzB,aAAc;IAAAgB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAC3D,CAGC,CAAC;AAER;AAEA,eAAexB,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module"}
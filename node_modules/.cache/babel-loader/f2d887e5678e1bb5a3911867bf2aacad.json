{"ast":null,"code":"var _jsxFileName = \"D:\\\\NHAN\\\\REACTJS\\\\asm-react2\\\\src\\\\components\\\\MovieList\\\\MovieDetail.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport YouTube from 'react-youtube';\nimport classes from './MovieDetail.module.css'; // CSS module for styling\n\nconst MovieDetail = ({\n  movieData\n}) => {\n  const [videoKey, setVideoKey] = useState(null);\n  const base_url = \"https://image.tmdb.org/t/p/original/\";\n  useEffect(() => {\n    if (movieData) {\n      const fetchVideo = async () => {\n        try {\n          const response = await axios.get(`https://api.themoviedb.org/3/movie/${movieData.id}/videos?api_key=391c32141f9d013bc872bec944088b32`);\n          const videos = response.data.results;\n          const trailer = videos.find(video => video.site === 'YouTube' && (video.type === 'Trailer' || video.type === 'Teaser'));\n          setVideoKey(trailer ? trailer.key : null);\n        } catch (error) {\n          console.error(\"Lỗi khi lấy dữ liệu trailer\", error);\n        }\n      };\n      fetchVideo();\n    }\n  }, [movieData]);\n  if (!movieData) return null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.movieDetail,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.left,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: classes['movie-title'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, movieData.title || movieData.name ? movieData.title || movieData.name : \"Title not available\"), /*#__PURE__*/React.createElement(\"ul\", {\n    className: classes['movie-meta'],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, movieData.release_date && /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 48\n    }\n  }, \"Release date: \", movieData.release_date), movieData.vote_average !== undefined && /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 62\n    }\n  }, \"Vote: \", movieData.vote_average, \" / 10\")), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, movieData.overview ? movieData.overview : \"Overview not available.\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.right,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, videoKey ? /*#__PURE__*/React.createElement(YouTube, {\n    videoId: videoKey,\n    opts: {\n      height: '400',\n      width: '100%',\n      playerVars: {\n        autoplay: 0\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }) : /*#__PURE__*/React.createElement(\"figure\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: `${base_url}${movieData.backdrop_path}`,\n    alt: movieData.name,\n    className: classes.movieDetail__backdrop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 25\n    }\n  }))));\n};\nexport default MovieDetail;","map":{"version":3,"names":["React","useEffect","useState","axios","YouTube","classes","MovieDetail","movieData","videoKey","setVideoKey","base_url","fetchVideo","response","get","id","videos","data","results","trailer","find","video","site","type","key","error","console","createElement","className","movieDetail","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","left","title","name","release_date","vote_average","undefined","overview","right","videoId","opts","height","width","playerVars","autoplay","src","backdrop_path","alt","movieDetail__backdrop"],"sources":["D:/NHAN/REACTJS/asm-react2/src/components/MovieList/MovieDetail.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport YouTube from 'react-youtube';\r\nimport classes from './MovieDetail.module.css'; // CSS module for styling\r\n\r\nconst MovieDetail = ({ movieData }) => {\r\n    const [videoKey, setVideoKey] = useState(null);\r\n    const base_url = \"https://image.tmdb.org/t/p/original/\";\r\n\r\n    useEffect(() => {\r\n        if (movieData) {\r\n            const fetchVideo = async() => {\r\n                try {\r\n                    const response = await axios.get(`https://api.themoviedb.org/3/movie/${movieData.id}/videos?api_key=391c32141f9d013bc872bec944088b32`);\r\n                    const videos = response.data.results;\r\n                    const trailer = videos.find(video => video.site === 'YouTube' && (video.type === 'Trailer' || video.type === 'Teaser'));\r\n                    setVideoKey(trailer ? trailer.key : null);\r\n                } catch (error) {\r\n                    console.error(\"Lỗi khi lấy dữ liệu trailer\", error);\r\n                }\r\n            };\r\n            fetchVideo();\r\n        }\r\n    }, [movieData]);\r\n    if (!movieData) return null;\r\n\r\n    return (\r\n        <div className={classes.movieDetail}>\r\n            <div className={classes.left}>\r\n                <h3 className={classes['movie-title']}>\r\n                    {movieData.title || movieData.name ? movieData.title || movieData.name : \"Title not available\"}\r\n                </h3>\r\n                <ul className={classes['movie-meta']}>\r\n                    {movieData.release_date && <li>Release date: {movieData.release_date}</li>}\r\n                    {movieData.vote_average !== undefined && <li>Vote: {movieData.vote_average} / 10</li>}\r\n                </ul>\r\n                <p>{movieData.overview ? movieData.overview : \"Overview not available.\"}</p>\r\n            </div>\r\n            <div className={classes.right}>\r\n                {videoKey ? (\r\n                    <YouTube\r\n                        videoId={videoKey}\r\n                        opts={{height: '400', width: '100%', playerVars: {autoplay: 0}}}\r\n                    />\r\n                ) : (\r\n                    <figure>\r\n                        <img\r\n                            src={`${base_url}${movieData.backdrop_path}`}\r\n                            alt={movieData.name}\r\n                        className={classes.movieDetail__backdrop}\r\n                    /></figure>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MovieDetail;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}